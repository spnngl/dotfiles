#!/bin/zsh

source ~/.config/bspwm/panel/panel_colors
source ~/.config/bspwm/panel/panel_config
#. mpv_functions

# check if panel is already running
if [[ $(pgrep -cx panel) -gt 1 ]]; then
	printf "%s\n" "The panel is already running." >&2
	exit 1
fi

# exit gracefully if terminated
trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

# remove old panel fifo, creat new one
[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

# set up bspwm to not overlap the panel
bspc config bottom_padding "$PANEL_HEIGHT"

# get bspwms status feed
bspc control --subscribe > "$PANEL_FIFO" &

# window title
# xtitle -sf 'TITLE%s' > "$PANEL_FIFO" &

# clock
while true; do
	echo -e "TIME$ICON_CLOCK$(date +"%_H:%M")"
    sleep $REFRESH_CLOCK
done > "$PANEL_FIFO" &

# date
while true; do
	echo -e "DAY$ICON_DATE$(date +'%a %d %b')"
    sleep $REFRESH_DATE
done > "$PANEL_FIFO" &

## battery
while true; do
	echo -e "BAT$(acpi -b | grep -o '[[:digit:]]\+%')"
	sleep $REFRESH_BATTERY
done > "$PANEL_FIFO" &


# battery
#while true; do
#    BATT_LEVEL=$(acpi -b | grep -o '[[:digit:]]\+%' | sed 's/%//')
#    if [[ $(cat "$POWERSUPPLY/online") != 1 ]]; then
#        if [[ $BATT_LEVEL -ge 80 ]]; then
#	    	BATT_ICON=$ICON_BATTERY_FULL
#    	elif [[ $BATT_LEVEL -ge 60 && $BATT_LEVEL -lt 80 ]]; then
#	    	BATT_ICON=$ICON_BATTERY_THREEQUARTERS
#    	elif [[ $BATT_LEVEL -ge 40 && $BATT_LEVEL -lt 60 ]]; then
#	    	BATT_ICON=$ICON_BATTERY_HALF
#    	elif [[ $BATT_LEVEL -ge 20 && $BATT_LEVEL -lt 40 ]]; then
#	    	BATT_ICON=$ICON_BATTERY_QUARTER
#    	elif [[ $BATT_LEVEL -lt 20 ]]; then
#	    	BATT_ICON=$ICON_BATTERY_EMPTY
#    	fi
#    else
#        BATT_ICON=$ICON_BATTERY_CHARGING
#    fi
#	#uncomment next and delete the line after that to see percentage
#	#echo -e $BATT_ICON %{F$COLOR_TEXT_FG} $BATT_LEVEL%%{F-}
#	echo -e BAT$BATT_ICON $BATT_LEVEL
#	sleep $REFRESH_BATTERY
#done > "$PANEL_FIFO" &

# CPU freq
while true; do
	echo -e "CPU$(cat /proc/cpuinfo | grep 'cpu MHz' | awk '{OMFT="%.0f"; print $4/1}')MHz"
	sleep $REFRESH_CPU
done > "$PANEL_FIFO" &

# RAM
while true; do
	echo -e "MEM$(free | grep Mem: | awk '{OFMT="%.1f"; print ($3/$2)*100}')%"
	sleep $REFRESH_MEM
done > "$PANEL_FIFO" &

# external ip
while true; do
	echo -e "IP$(iwconfig $WIFI_INTERFACE | grep ESSID: | grep -o '["^]*[a-zA-Z0-9_-]*["]' | sed 's/"//g')"
	sleep $REFRESH_EXT_IP
done > "$PANEL_FIFO" &

# dump panel into panel_bar and then into lemonbar
cat "$PANEL_FIFO" | ~/.config/bspwm/panel/panel_bar | lemonbar \
    -g x"$PANEL_HEIGHT" \
	-b \
    -f "$PANEL_FONT" \
    -f "$ICON_FONT" \
    -f "$ICON_FONT2" \
    -F "$COLOR_FOREGROUND" \
    -B "$COLOR_BACKGROUND" \
	-o -10 \ # vertical offset
    -u 2 &
wait
