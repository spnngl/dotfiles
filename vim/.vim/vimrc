"    ▗           
" ▌ ▌▄ ▛▚▀▖▙▀▖▞▀▖
" ▐▐ ▐ ▌▐ ▌▌  ▌ ▖
"  ▘ ▀▘▘▝ ▘▘  ▝▀ 

" first things first
set nocompatible noerrorbells
let mapleader = "<space>"
filetype on

" tidy
set viminfo+=n~/.vim/viminfo

source $HOME/.vim/rc/remap.vim
source $HOME/.vim/rc/plugin.vim

" auto-complete c "
set path=/usr/include,/usr/local/include,/usr/local/lib

" divers "
set modelines=0
set number
set cursorline
set incsearch hlsearch
set encoding=utf-8
set synmaxcol=256
set lazyredraw
set shell=/bin/mksh
set showcmd showmatch
"set spell
"set wildignore=*.pyc,*.o
set history=50

" crypt
setlocal cm=blowfish2

" undo & backup & swap
set undofile undodir=~/.vim/undo undolevels=1000
set nobackup nowritebackup
set noswapfile

" good search
set ignorecase smartcase infercase

" indent options "
set tabstop=4 shiftwidth=4 expandtab
set autoindent

" remove trailing whitespaces and ^M chars
au FileType c,cpp,java,php,js,python,xml,yml au BufWritePre <buffer> :call setline(1,map(getline(1,"$"),'substitute(v:val,"\\s\\+$","","")'))

" remove eol blank line(s)
au BufWritePre * silent! :%s#\($\n\s*\)\+\%$##

" pdb killer
"au FileType python au BufUnload,BufWritePre * %s/\<pdb.set_trace\>/\#pdb.set_trace/g
" <buffer> pdb.set_trace I#<esc>

" remember cursor position
au BufReadPost *
   \ if line("'\"") > 0 && line("'\"") <= line("$") |
   \ exe "normal g`\"" |
   \ endif

" folding "
"set foldmethod=indent
"set foldlevel=99
"nnoremap <space> za

" latex
au BufNewFile,BufRead *.cls set filetype=tex

" colors
colorscheme fahrenheit
syntax on
set colorcolumn=90
"hi ColorColumn ctermbg=lightgrey

" remove trailing white space
command Nows :%s/\s\+$//

" remove blank lines
command Nobl :g/^\s*$/d
